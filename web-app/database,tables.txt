here is the existing table add, remove and modify if needed

create table public.users (
  id uuid not null default gen_random_uuid (),
  school_id text not null,
  first_name text not null,
  middle_name text null,
  last_name text not null,
  email text not null,
  contact_number text not null,
  password text not null,
  role text not null,
  section_id uuid null,
  created_at timestamp without time zone null default (now() AT TIME ZONE 'Asia/Manila'::text),
  profile_picture text null,
  status text not null default 'Active'::text,
  teacher_id uuid null,
  is_teacher boolean null default false,
  constraint users_pkey primary key (id),
  constraint users_email_key unique (email),
  constraint users_school_id_key unique (school_id),
  constraint fk_section foreign KEY (section_id) references sections (id) on delete set null,
  constraint users_teacher_id_fkey foreign KEY (teacher_id) references users (id),
  constraint users_role_check check (
    (
      role = any (
        array['Admin'::text, 'Teacher'::text, 'Student'::text]
      )
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_users_role on public.users using btree (role) TABLESPACE pg_default;

create index IF not exists idx_users_section on public.users using btree (section_id) TABLESPACE pg_default;

create index IF not exists idx_users_status on public.users using btree (status) TABLESPACE pg_default;

create trigger student_count_trigger
after INSERT
or DELETE
or
update on users for EACH row
execute FUNCTION update_student_count ();

create table public.sections (
  id uuid not null default gen_random_uuid (),
  section_name text not null,
  teacher_id uuid not null,
  created_at timestamp without time zone null default (now() AT TIME ZONE 'Asia/Manila'::text),
  updated_at timestamp without time zone null default (now() AT TIME ZONE 'Asia/Manila'::text),
  student_count integer null default 0,
  updated_by uuid null,
  constraint sections_pkey primary key (id),
  constraint unique_section_name unique (section_name),
  constraint fk_updated_by foreign KEY (updated_by) references users (id) on delete set null,
  constraint teacher_id_fkey foreign KEY (teacher_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.submissions (
  id uuid not null default gen_random_uuid (),
  student_id uuid not null,
  section_id uuid not null,
  submitted_at timestamp without time zone not null default (now() AT TIME ZONE 'Asia/Manila'::text),
  status text not null default 'Pending'::text,
  grade numeric null,
  assessment_id uuid null,
  constraint submissions_pkey primary key (id),
  constraint submissions_assessment_id_fkey foreign KEY (assessment_id) references assessments (id) on delete CASCADE,
  constraint submissions_section_id_fkey foreign KEY (section_id) references sections (id) on delete CASCADE,
  constraint submissions_student_id_fkey foreign KEY (student_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_submissions_assessment_id on public.submissions using btree (assessment_id) TABLESPACE pg_default;

create table public.reminders (
  id uuid not null default gen_random_uuid (),
  title text not null,
  description text null,
  due_date timestamp without time zone null default (now() AT TIME ZONE 'Asia/Manila'::text),
  created_by uuid null,
  created_at timestamp without time zone null default (now() AT TIME ZONE 'Asia/Manila'::text),
  section_id uuid null,
  constraint reminders_pkey primary key (id),
  constraint reminders_created_by_fkey foreign KEY (created_by) references users (id) on delete CASCADE,
  constraint reminders_section_id_fkey foreign KEY (section_id) references sections (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.messages (
  id uuid not null default gen_random_uuid (),
  sender_id uuid not null,
  receiver_id uuid not null,
  content text not null,
  created_at timestamp without time zone not null default (now() AT TIME ZONE 'Asia/Manila'::text),
  read boolean not null default false,
  file_url text null,
  file_name text null,
  constraint messages_pkey primary key (id),
  constraint messages_receiver_id_fkey foreign KEY (receiver_id) references users (id),
  constraint messages_sender_id_fkey foreign KEY (sender_id) references users (id)
) TABLESPACE pg_default;

create index IF not exists idx_messages_sender_receiver_created on public.messages using btree (sender_id, receiver_id, created_at) TABLESPACE pg_default;

create index IF not exists idx_messages_receiver_sender_created on public.messages using btree (receiver_id, sender_id, created_at) TABLESPACE pg_default;

create index IF not exists idx_messages_user_conversations on public.messages using btree (created_at desc) TABLESPACE pg_default
where
  (
    (sender_id is not null)
    or (receiver_id is not null)
  );

create index IF not exists idx_messages_read_status on public.messages using btree (receiver_id, sender_id, read) TABLESPACE pg_default;

create table public.lessons (
  id uuid not null default gen_random_uuid (),
  title text not null,
  created_at timestamp without time zone null default (now() AT TIME ZONE 'Asia/Manila'::text),
  updated_at timestamp without time zone null default (now() AT TIME ZONE 'Asia/Manila'::text),
  video_url text null,
  pdf_url text null,
  constraint lessons_pkey primary key (id)
) TABLESPACE pg_default;

create table public.leaderboard (
  id uuid not null default gen_random_uuid (),
  user_id uuid null,
  score numeric not null,
  section_id uuid null,
  created_at timestamp without time zone null default (now() AT TIME ZONE 'Asia/Manila'::text),
  completion_percentage numeric null,
  constraint leaderboard_pkey primary key (id),
  constraint leaderboard_section_id_fkey foreign KEY (section_id) references sections (id) on delete CASCADE,
  constraint leaderboard_user_id_fkey foreign KEY (user_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.awards (
  id uuid not null default gen_random_uuid (),
  user_id uuid not null,
  award_name text not null default (now() AT TIME ZONE 'Asia/Manila'::text),
  award_date timestamp without time zone null default now(),
  award_reason text null,
  constraint awards_pkey primary key (id),
  constraint fk_user_award foreign KEY (user_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_user_awards on public.awards using btree (user_id) TABLESPACE pg_default;

create table public.assigned_assessments (
  id uuid not null default gen_random_uuid (),
  assessment_id uuid not null,
  section_id uuid not null,
  deadline timestamp without time zone not null,
  assigned_at timestamp without time zone null default (now() AT TIME ZONE 'Asia/Manila'::text),
  constraint assigned_assessments_pkey primary key (id),
  constraint assigned_assessments_assessment_id_fkey foreign KEY (assessment_id) references assessments (id) on delete CASCADE,
  constraint assigned_assessments_section_id_fkey foreign KEY (section_id) references sections (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.assessments (
  id uuid not null default gen_random_uuid (),
  teacher_id uuid not null,
  title text not null,
  type text not null,
  questions jsonb not null,
  created_at timestamp without time zone null default (now() AT TIME ZONE 'Asia/Manila'::text),
  updated_at timestamp without time zone null default (now() AT TIME ZONE 'Asia/Manila'::text),
  description text null,
  constraint assessments_pkey primary key (id),
  constraint assessments_teacher_id_fkey foreign KEY (teacher_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;